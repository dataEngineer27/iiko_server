"""Update column types in tables

Revision ID: d806f8cf71d3
Revises: 6e41bc8b0422
Create Date: 2023-11-11 12:28:29.376539

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd806f8cf71d3'
down_revision: Union[str, None] = '6e41bc8b0422'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('department_revenue', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('department_revenue', 'date',
               existing_type=sa.VARCHAR(),
               type_=sa.Date(),
               existing_nullable=True, postgresql_using='date::date')
    op.alter_column('nomenclatures', 'main_unit',
               existing_type=sa.VARCHAR(),
               type_=sa.UUID(),
               existing_nullable=True, postgresql_using='main_unit::uuid')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('nomenclatures', 'main_unit',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('department_revenue', 'date',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('department_revenue', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
