"""Migration models

Revision ID: 7a01b1b903da
Revises: 
Create Date: 2023-10-19 17:06:52.726951

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7a01b1b903da'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('tax_payer_id', sa.String(), nullable=True),
    sa.Column('is_added', sa.Integer(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nomenclature_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('roles', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('role_codes', sa.String(), nullable=True),
    sa.Column('role_code', sa.String(), nullable=True),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('supplier', sa.Boolean(), nullable=True),
    sa.Column('employee', sa.Boolean(), nullable=True),
    sa.Column('client', sa.Boolean(), nullable=True),
    sa.Column('representStore', sa.Boolean(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['employee_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nomenclature_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('num', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('accountingCategory_id', sa.UUID(), nullable=True),
    sa.Column('departments_visibility', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['nomenclature_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nomenclatures',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('accounting_category', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('num', sa.String(), nullable=True),
    sa.Column('code', sa.BIGINT(), nullable=True),
    sa.Column('main_unit', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('place_type', sa.UUID(), nullable=True),
    sa.Column('included_in_menu', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('unit_weight', sa.Float(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['nomenclature_categories.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['nomenclature_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_list',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_number', sa.Integer(), nullable=True),
    sa.Column('fiscal_number', sa.Integer(), nullable=True),
    sa.Column('cash_reg_number', sa.Integer(), nullable=True),
    sa.Column('cash_reg_serial', sa.String(), nullable=True),
    sa.Column('open_date', sa.DateTime(), nullable=True),
    sa.Column('close_date', sa.DateTime(), nullable=True),
    sa.Column('accepted_date', sa.DateTime(), nullable=True),
    sa.Column('manager_id', sa.UUID(), nullable=True),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('session_start_cash', sa.REAL(), nullable=True),
    sa.Column('pay_orders', sa.BIGINT(), nullable=True),
    sa.Column('sum_write_off_orders', sa.BIGINT(), nullable=True),
    sa.Column('sales_cash', sa.REAL(), nullable=True),
    sa.Column('sales_credit', sa.REAL(), nullable=True),
    sa.Column('sales_card', sa.REAL(), nullable=True),
    sa.Column('pay_in', sa.REAL(), nullable=True),
    sa.Column('pay_out', sa.REAL(), nullable=True),
    sa.Column('pay_income', sa.REAL(), nullable=True),
    sa.Column('cash_remain', sa.REAL(), nullable=True),
    sa.Column('cash_diff', sa.REAL(), nullable=True),
    sa.Column('session_status', sa.String(), nullable=True),
    sa.Column('conception_id', sa.UUID(), nullable=True),
    sa.Column('point_of_sale_id', sa.UUID(), nullable=True),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_added', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('department_revenue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('nomenclature_id', sa.UUID(), nullable=True),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('sum', sa.REAL(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclatures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_department_revenue_id'), 'department_revenue', ['id'], unique=False)
    op.create_table('product_expense',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('nomenclature_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('main_unit', sa.String(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['nomenclature_categories.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['nomenclature_groups.id'], ),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclatures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('shift_id', sa.UUID(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.Column('counteragent_id', sa.UUID(), nullable=True),
    sa.Column('payment_type_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('sum', sa.Float(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cause_event_id', sa.UUID(), nullable=True),
    sa.Column('cashier_id', sa.UUID(), nullable=True),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('actual_sum', sa.Float(), nullable=True),
    sa.Column('original_sum', sa.Float(), nullable=True),
    sa.Column('edited_payaccount_id', sa.UUID(), nullable=True),
    sa.Column('original_payaccount_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cashier_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['shift_list.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shift_payments')
    op.drop_table('product_expense')
    op.drop_index(op.f('ix_department_revenue_id'), table_name='department_revenue')
    op.drop_table('department_revenue')
    op.drop_table('shift_list')
    op.drop_table('nomenclatures')
    op.drop_table('nomenclature_groups')
    op.drop_table('employees')
    op.drop_table('nomenclature_categories')
    op.drop_table('employee_roles')
    op.drop_table('departments')
    # ### end Alembic commands ###
