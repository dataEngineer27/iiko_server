"""Migrate new store operations tables

Revision ID: 7f38c4b48485
Revises: a59b6c0c4886
Create Date: 2023-11-22 14:38:59.609626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7f38c4b48485'
down_revision: Union[str, None] = 'a59b6c0c4886'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reference_units',
    sa.Column('id', sa.UUID(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_added', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('store_incomings',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('incoming_invoice_id', sa.UUID(), nullable=True),
    sa.Column('doc_number', sa.String(), nullable=True),
    sa.Column('incoming_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('supplier_id', sa.UUID(), nullable=True),
    sa.Column('store_id', sa.UUID(), nullable=True),
    sa.Column('actual_amount', sa.DECIMAL(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('price_withoutVat', sa.DECIMAL(), nullable=True),
    sa.Column('sum', sa.DECIMAL(), nullable=True),
    sa.Column('measureunit_id', sa.UUID(), nullable=True),
    sa.Column('nomenclature_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.DECIMAL(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['measureunit_id'], ['reference_units.id'], ),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclatures.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_incomings_id'), 'store_incomings', ['id'], unique=False)
    op.create_table('store_remains',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('store_id', sa.UUID(), nullable=True),
    sa.Column('nomenclature_id', sa.UUID(), nullable=True),
    sa.Column('datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('amount', sa.DECIMAL(), nullable=True),
    sa.Column('sum', sa.DECIMAL(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclatures.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_remains_id'), 'store_remains', ['id'], unique=False)
    op.create_table('store_sendings',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('outgoing_invoice_id', sa.UUID(), nullable=True),
    sa.Column('doc_number', sa.String(), nullable=True),
    sa.Column('incoming_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('store_id', sa.UUID(), nullable=True),
    sa.Column('supplier_id', sa.UUID(), nullable=True),
    sa.Column('incominginvoice_id', sa.UUID(), nullable=True),
    sa.Column('nomenclature_id', sa.UUID(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('price_withoutVat', sa.DECIMAL(), nullable=True),
    sa.Column('amount', sa.DECIMAL(), nullable=True),
    sa.Column('sum', sa.DECIMAL(), nullable=True),
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['nomenclature_id'], ['nomenclatures.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_sendings_id'), 'store_sendings', ['id'], unique=False)
    op.alter_column('shift_list', 'pay_orders',
               existing_type=sa.BIGINT(),
               type_=sa.DECIMAL(),
               existing_nullable=True)
    op.alter_column('shift_list', 'sum_write_off_orders',
               existing_type=sa.BIGINT(),
               type_=sa.DECIMAL(),
               existing_nullable=True)
    op.create_foreign_key(None, 'shift_payments', 'reference_units', ['ordertype_id'], ['id'])
    op.create_foreign_key(None, 'shift_payments', 'reference_units', ['paymenttype_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'shift_payments', type_='foreignkey')
    op.drop_constraint(None, 'shift_payments', type_='foreignkey')
    op.alter_column('shift_list', 'sum_write_off_orders',
               existing_type=sa.DECIMAL(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('shift_list', 'pay_orders',
               existing_type=sa.DECIMAL(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.drop_index(op.f('ix_store_sendings_id'), table_name='store_sendings')
    op.drop_table('store_sendings')
    op.drop_index(op.f('ix_store_remains_id'), table_name='store_remains')
    op.drop_table('store_remains')
    op.drop_index(op.f('ix_store_incomings_id'), table_name='store_incomings')
    op.drop_table('store_incomings')
    op.drop_table('stores')
    op.drop_table('reference_units')
    # ### end Alembic commands ###
